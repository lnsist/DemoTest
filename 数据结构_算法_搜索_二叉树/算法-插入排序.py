"""插入排序
-- 是一个在有序列表中从后向前冒泡对比的排序,
循环列表, 将第一个元素认为是有序的元素,
下一个元素和已排序列表中从后向前对比,
如果未排序元素不是相对较大(小), 则换位继续和下一个已排序元素对比,
直到是相对较大(小)的, 插入当前对比的已排序的元素前面,

1. 从第一个元素开始, 该元素可以认为已经被排序,
2. 取出下一个元素, 在已经排序的元素序列中从后向前扫描,
3. 如果该元素（已排序）大于新元素, 将该元素移到下一位置,
4. 重复步骤3, 直到找到已排序的元素小于或者等于新元素的位置,
5.将新元素插入到该位置后,
重复步骤2~5

默认有一个空的[已排序列表]和[未排序列表], 循环[已排序列表]的[每个元素]和[未排序列表]的[第一个元素]两两对比,
如果没出现[未排序列表]的元素相对大(小)的元素, 则换位继续循环对比,
直到出现[未排序列表]的元素相对大(小)的元素, 就将[未排序列表]的元素相对大(小)的元素插入到[已排序列表]中

时间复杂度
最优时间复杂度:O(n) (升序排列,序列已经处于升序状态)
最坏时间复杂度:O(n^2)
稳定性:稳定

date: 18-12-29 下午6:27
"""


def insert_sort(sort_list):
    """插入排序"""

    # 循环未排序列表从 1 开始
    for i in range(1, len(sort_list)):
        # 从 i 开始, 向后循环
        for j in range(i, 0, -1):
            # 如果当前元素 小于 上一个元素
            if sort_list[j] < sort_list[j - 1]:
                # 调换位置
                sort_list[j], sort_list[j - 1] = sort_list[j - 1], sort_list[j]
